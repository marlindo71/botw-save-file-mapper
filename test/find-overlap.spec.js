const assert = require('assert');
const findOverlap = require('../find-overlap.js');

const changesToApply1 = [
    { offset: 0x0000f0b8, value: 0x4752e900 },
    { offset: 0x00051ce8, value: 0x4752e900 },
    { offset: 0x00052e08, value: 0x4286d3e9 },
    { offset: 0x00061088, value: 0x506c6179 },
    { offset: 0x00061090, value: 0x65725374 },
    { offset: 0x00061098, value: 0x6f6c6532 },
    { offset: 0x000610a0, value: 0x00000000 },
    { offset: 0x00061108, value: 0x4f626a5f },
    { offset: 0x00061110, value: 0x44525374 },
    { offset: 0x00061118, value: 0x6f6e655f },
    { offset: 0x00061120, value: 0x47657400 },
    { offset: 0x00061188, value: 0x00000000 },
    { offset: 0x00061190, value: 0x00000000 },
    { offset: 0x00061198, value: 0x00000000 },
    { offset: 0x000611a0, value: 0x00000000 },
    { offset: 0x00071290, value: 0x00000000 },
    { offset: 0x00075998, value: 0x00000622 },
    { offset: 0x0007d4b0, value: 0x4752e900 },
    { offset: 0x0007ebf8, value: 0x00000017 },
    { offset: 0x00086340, value: 0x00000003 },
    { offset: 0x000884d8, value: 0x00000003 },
    { offset: 0x000c14b0, value: 0x434fee62 },
    { offset: 0x000d2228, value: 0x00000003 },
    { offset: 0x000d9948, value: 0x0000001d },
];
const changesToUnapply1 = [
    { offset: 0x0000f0b8, value: 0x00000000 },
    { offset: 0x00051ce8, value: 0x00000000 },
    { offset: 0x00052e08, value: 0x4286b1c9 },
    { offset: 0x00061088, value: 0x4974656d },
    { offset: 0x00061090, value: 0x5f436f6f },
    { offset: 0x00061098, value: 0x6b5f425f },
    { offset: 0x000610a0, value: 0x30310000 },
    { offset: 0x00061108, value: 0x506c6179 },
    { offset: 0x00061110, value: 0x65725374 },
    { offset: 0x00061118, value: 0x6f6c6532 },
    { offset: 0x00061120, value: 0x00000000 },
    { offset: 0x00061188, value: 0x4f626a5f },
    { offset: 0x00061190, value: 0x44525374 },
    { offset: 0x00061198, value: 0x6f6e655f },
    { offset: 0x000611a0, value: 0x47657400 },
    { offset: 0x00071290, value: 0x00000001 },
    { offset: 0x00075998, value: 0x000005df },
    { offset: 0x0007d4b0, value: 0x00000000 },
    { offset: 0x0007ebf8, value: 0x00000016 },
    { offset: 0x00086340, value: 0x00000000 },
    { offset: 0x000884d8, value: 0x00000000 },
    { offset: 0x000c14b0, value: 0x434fdd52 },
    { offset: 0x000d2228, value: 0x00000000 },
    { offset: 0x000d9948, value: 0x00000128 },
];

const changesToApply2 = [
    { offset: 0x0000bd20, value: 0x00000001 },
    { offset: 0x0000f0b8, value: 0x4752f000 },
    { offset: 0x000493b8, value: 0x00000001 },
    { offset: 0x00051ce8, value: 0x4752f000 },
    { offset: 0x0006ae88, value: 0x4f626a5f },
    { offset: 0x0006ae90, value: 0x44525374 },
    { offset: 0x0006ae98, value: 0x6f6e655f },
    { offset: 0x0006aea0, value: 0x47657400 },
    { offset: 0x0006af10, value: 0x444c435f },
    { offset: 0x0006af18, value: 0x4865726f },
    { offset: 0x0006af20, value: 0x536f756c },
    { offset: 0x0006af28, value: 0x5f5a6f72 },
    { offset: 0x0006af30, value: 0x61000000 },
    { offset: 0x0006afa8, value: 0x5f526974 },
    { offset: 0x0006afb0, value: 0x6f000000 },
    { offset: 0x0006b028, value: 0x5f476f72 },
    { offset: 0x0006b030, value: 0x6f6e0000 },
    { offset: 0x0006b0a8, value: 0x5f476572 },
    { offset: 0x0006b0b0, value: 0x75646f00 },
    { offset: 0x0006b108, value: 0x506c6179 },
    { offset: 0x0006b110, value: 0x65725374 },
    { offset: 0x0006b118, value: 0x6f6c6532 },
    { offset: 0x0006b120, value: 0x00000000 },
    { offset: 0x0006b128, value: 0x00000000 },
    { offset: 0x0006b130, value: 0x00000000 },
    { offset: 0x0006b188, value: 0x4f626a5f },
    { offset: 0x0006b190, value: 0x44756e67 },
    { offset: 0x0006b198, value: 0x656f6e43 },
    { offset: 0x0006b1a0, value: 0x6c656172 },
    { offset: 0x0006b1a8, value: 0x5365616c },
    { offset: 0x0006b210, value: 0x4b6f726f },
    { offset: 0x0006b218, value: 0x6b4e7574 },
    { offset: 0x0006b220, value: 0x73000000 },
    { offset: 0x0006b228, value: 0x00000000 },
    { offset: 0x0006b290, value: 0x50726f6f },
    { offset: 0x0006b298, value: 0x66426f6f },
    { offset: 0x0006b2a0, value: 0x6b000000 },
    { offset: 0x0006b318, value: 0x664b6f72 },
    { offset: 0x0006b320, value: 0x6f6b0000 },
    { offset: 0x0006b398, value: 0x66476f6c },
    { offset: 0x0006b3a0, value: 0x656d4b69 },
    { offset: 0x0006b3a8, value: 0x6c6c6572 },
    { offset: 0x0006b418, value: 0x66476961 },
    { offset: 0x0006b420, value: 0x6e744b69 },
    { offset: 0x0006b498, value: 0x6653616e },
    { offset: 0x0006b4a0, value: 0x64776f72 },
    { offset: 0x0006b4a8, value: 0x6d4b696c },
    { offset: 0x0006b4b0, value: 0x6c657200 },
    { offset: 0x0006b508, value: 0x47616d65 },
    { offset: 0x0006b510, value: 0x526f6d48 },
    { offset: 0x0006b518, value: 0x6f727365 },
    { offset: 0x0006b520, value: 0x5265696e },
    { offset: 0x0006b528, value: 0x735f3031 },
    { offset: 0x0006b530, value: 0x00000000 },
    { offset: 0x0006b5a8, value: 0x735f3033 },
    { offset: 0x0006b628, value: 0x735f3032 },
    { offset: 0x0006b6a8, value: 0x735f3035 },
    { offset: 0x0006b728, value: 0x735f3034 },
    { offset: 0x0006b7a0, value: 0x53616464 },
    { offset: 0x0006b7a8, value: 0x6c655f30 },
    { offset: 0x0006b7b0, value: 0x31000000 },
    { offset: 0x0006b830, value: 0x33000000 },
    { offset: 0x0006b8b0, value: 0x35000000 },
    { offset: 0x0006b930, value: 0x34000000 },
    { offset: 0x0006b988, value: 0x4765745f },
    { offset: 0x0006b990, value: 0x54776e4f },
    { offset: 0x0006b998, value: 0x626a5f44 },
    { offset: 0x0006b9a0, value: 0x4c435f4d },
    { offset: 0x0006b9a8, value: 0x656d6f72 },
    { offset: 0x0006b9b0, value: 0x69616c50 },
    { offset: 0x0006b9b8, value: 0x69637475 },
    { offset: 0x0006b9c0, value: 0x72655f41 },
    { offset: 0x0006b9c8, value: 0x5f303100 },
    { offset: 0x0006ba08, value: 0x00000000 },
    { offset: 0x0006ba10, value: 0x00000000 },
    { offset: 0x0006ba18, value: 0x00000000 },
    { offset: 0x0006ba20, value: 0x00000000 },
    { offset: 0x0006ba28, value: 0x00000000 },
    { offset: 0x0006ba30, value: 0x00000000 },
    { offset: 0x0006ba38, value: 0x00000000 },
    { offset: 0x0006ba40, value: 0x00000000 },
    { offset: 0x0006ba48, value: 0x00000000 },
    { offset: 0x00071c78, value: 0x000003e7 },
    { offset: 0x00071c80, value: 0x00000001 },
    { offset: 0x00071ca0, value: 0x00000004 },
    { offset: 0x00071ca8, value: 0x000001cb },
    { offset: 0x00071cb0, value: 0x00000001 },
    { offset: 0x00071d28, value: 0x00000000 },
    { offset: 0x00075998, value: 0x000754c9 },
    { offset: 0x0007d4b0, value: 0x4752f000 },
    { offset: 0x0007ebf8, value: 0x0000001c },
    { offset: 0x00081820, value: 0x00000001 },
    { offset: 0x00081830, value: 0x00000000 },
    { offset: 0x00081838, value: 0x00000001 },
    { offset: 0x00081840, value: 0x00000000 },
    { offset: 0x00086340, value: 0x00000003 },
    { offset: 0x000884d8, value: 0x00000003 },
    { offset: 0x000c43a8, value: 0x00000001 },
    { offset: 0x000d2228, value: 0x00000003 },
    { offset: 0x000d9948, value: 0x00000023 },
];
const changesToUnapply2 = [
    { offset: 0x0000bd20, value: 0x00000000 },
    { offset: 0x0000f0b8, value: 0x00000000 },
    { offset: 0x000493b8, value: 0x00000000 },
    { offset: 0x00051ce8, value: 0x00000000 },
    { offset: 0x0006ae88, value: 0x4974656d },
    { offset: 0x0006ae90, value: 0x5f436f6f },
    { offset: 0x0006ae98, value: 0x6b5f425f },
    { offset: 0x0006aea0, value: 0x30310000 },
    { offset: 0x0006af10, value: 0x44525374 },
    { offset: 0x0006af18, value: 0x6f6e655f },
    { offset: 0x0006af20, value: 0x47657400 },
    { offset: 0x0006af28, value: 0x00000000 },
    { offset: 0x0006af30, value: 0x00000000 },
    { offset: 0x0006afa8, value: 0x5f5a6f72 },
    { offset: 0x0006afb0, value: 0x61000000 },
    { offset: 0x0006b028, value: 0x5f526974 },
    { offset: 0x0006b030, value: 0x6f000000 },
    { offset: 0x0006b0a8, value: 0x5f476f72 },
    { offset: 0x0006b0b0, value: 0x6f6e0000 },
    { offset: 0x0006b108, value: 0x4f626a5f },
    { offset: 0x0006b110, value: 0x444c435f },
    { offset: 0x0006b118, value: 0x4865726f },
    { offset: 0x0006b120, value: 0x536f756c },
    { offset: 0x0006b128, value: 0x5f476572 },
    { offset: 0x0006b130, value: 0x75646f00 },
    { offset: 0x0006b188, value: 0x506c6179 },
    { offset: 0x0006b190, value: 0x65725374 },
    { offset: 0x0006b198, value: 0x6f6c6532 },
    { offset: 0x0006b1a0, value: 0x00000000 },
    { offset: 0x0006b1a8, value: 0x00000000 },
    { offset: 0x0006b210, value: 0x44756e67 },
    { offset: 0x0006b218, value: 0x656f6e43 },
    { offset: 0x0006b220, value: 0x6c656172 },
    { offset: 0x0006b228, value: 0x5365616c },
    { offset: 0x0006b290, value: 0x4b6f726f },
    { offset: 0x0006b298, value: 0x6b4e7574 },
    { offset: 0x0006b2a0, value: 0x73000000 },
    { offset: 0x0006b318, value: 0x66426f6f },
    { offset: 0x0006b320, value: 0x6b000000 },
    { offset: 0x0006b398, value: 0x664b6f72 },
    { offset: 0x0006b3a0, value: 0x6f6b0000 },
    { offset: 0x0006b3a8, value: 0x00000000 },
    { offset: 0x0006b418, value: 0x66476f6c },
    { offset: 0x0006b420, value: 0x656d4b69 },
    { offset: 0x0006b498, value: 0x66476961 },
    { offset: 0x0006b4a0, value: 0x6e744b69 },
    { offset: 0x0006b4a8, value: 0x6c6c6572 },
    { offset: 0x0006b4b0, value: 0x00000000 },
    { offset: 0x0006b508, value: 0x4f626a5f },
    { offset: 0x0006b510, value: 0x50726f6f },
    { offset: 0x0006b518, value: 0x6653616e },
    { offset: 0x0006b520, value: 0x64776f72 },
    { offset: 0x0006b528, value: 0x6d4b696c },
    { offset: 0x0006b530, value: 0x6c657200 },
    { offset: 0x0006b5a8, value: 0x735f3031 },
    { offset: 0x0006b628, value: 0x735f3033 },
    { offset: 0x0006b6a8, value: 0x735f3032 },
    { offset: 0x0006b728, value: 0x735f3035 },
    { offset: 0x0006b7a0, value: 0x5265696e },
    { offset: 0x0006b7a8, value: 0x735f3034 },
    { offset: 0x0006b7b0, value: 0x00000000 },
    { offset: 0x0006b830, value: 0x31000000 },
    { offset: 0x0006b8b0, value: 0x33000000 },
    { offset: 0x0006b930, value: 0x35000000 },
    { offset: 0x0006b988, value: 0x47616d65 },
    { offset: 0x0006b990, value: 0x526f6d48 },
    { offset: 0x0006b998, value: 0x6f727365 },
    { offset: 0x0006b9a0, value: 0x53616464 },
    { offset: 0x0006b9a8, value: 0x6c655f30 },
    { offset: 0x0006b9b0, value: 0x34000000 },
    { offset: 0x0006b9b8, value: 0x00000000 },
    { offset: 0x0006b9c0, value: 0x00000000 },
    { offset: 0x0006b9c8, value: 0x00000000 },
    { offset: 0x0006ba08, value: 0x4765745f },
    { offset: 0x0006ba10, value: 0x54776e4f },
    { offset: 0x0006ba18, value: 0x626a5f44 },
    { offset: 0x0006ba20, value: 0x4c435f4d },
    { offset: 0x0006ba28, value: 0x656d6f72 },
    { offset: 0x0006ba30, value: 0x69616c50 },
    { offset: 0x0006ba38, value: 0x69637475 },
    { offset: 0x0006ba40, value: 0x72655f41 },
    { offset: 0x0006ba48, value: 0x5f303100 },
    { offset: 0x00071c78, value: 0x00000001 },
    { offset: 0x00071c80, value: 0x000003e7 },
    { offset: 0x00071ca0, value: 0x00000001 },
    { offset: 0x00071ca8, value: 0x00000004 },
    { offset: 0x00071cb0, value: 0x000001cb },
    { offset: 0x00071d28, value: 0x00000001 },
    { offset: 0x00075998, value: 0x0007546f },
    { offset: 0x0007d4b0, value: 0x00000000 },
    { offset: 0x0007ebf8, value: 0x0000001b },
    { offset: 0x00081820, value: 0x00000000 },
    { offset: 0x00081830, value: 0x00000001 },
    { offset: 0x00081838, value: 0x00000000 },
    { offset: 0x00081840, value: 0x00000001 },
    { offset: 0x00086340, value: 0x00000000 },
    { offset: 0x000884d8, value: 0x00000000 },
    { offset: 0x000c43a8, value: 0x00000000 },
    { offset: 0x000d2228, value: 0x00000000 },
    { offset: 0x000d9948, value: 0x00000122 },
];

const expectedMinusOverlap1 = [
    { offset: 0x0000f0b8, value: 0x00000000 },
    { offset: 0x00051ce8, value: 0x00000000 },
    { offset: 0x00075998, value: 0x000005df },
    { offset: 0x0007d4b0, value: 0x00000000 },
    { offset: 0x0007ebf8, value: 0x00000016 },
    { offset: 0x00086340, value: 0x00000000 },
    { offset: 0x000884d8, value: 0x00000000 },
    { offset: 0x000d2228, value: 0x00000000 },
    { offset: 0x000d9948, value: 0x00000128 },
];
const expectedPlusOverlap1 = [
    { offset: 0x0000f0b8, value: 0x4752e900 },
    { offset: 0x00051ce8, value: 0x4752e900 },
    { offset: 0x00075998, value: 0x00000622 },
    { offset: 0x0007d4b0, value: 0x4752e900 },
    { offset: 0x0007ebf8, value: 0x00000017 },
    { offset: 0x00086340, value: 0x00000003 },
    { offset: 0x000884d8, value: 0x00000003 },
    { offset: 0x000d2228, value: 0x00000003 },
    { offset: 0x000d9948, value: 0x0000001d },
];

const expectedMinusOverlap2 = [
    { offset: 0x0000f0b8, value: 0x00000000 },
    { offset: 0x00051ce8, value: 0x00000000 },
    { offset: 0x00075998, value: 0x0007546f },
    { offset: 0x0007d4b0, value: 0x00000000 },
    { offset: 0x0007ebf8, value: 0x0000001b },
    { offset: 0x00086340, value: 0x00000000 },
    { offset: 0x000884d8, value: 0x00000000 },
    { offset: 0x000d2228, value: 0x00000000 },
    { offset: 0x000d9948, value: 0x00000122 },
];
const expectedPlusOverlap2 = [
    { offset: 0x0000f0b8, value: 0x4752f000 },
    { offset: 0x00051ce8, value: 0x4752f000 },
    { offset: 0x00075998, value: 0x000754c9 },
    { offset: 0x0007d4b0, value: 0x4752f000 },
    { offset: 0x0007ebf8, value: 0x0000001c },
    { offset: 0x00086340, value: 0x00000003 },
    { offset: 0x000884d8, value: 0x00000003 },
    { offset: 0x000d2228, value: 0x00000003 },
    { offset: 0x000d9948, value: 0x00000023 },
];

const expectedMinusOverlapValueEnforced = [
    { offset: 0x00086340, value: 0x00000000 },
    { offset: 0x000884d8, value: 0x00000000 },
    { offset: 0x000d2228, value: 0x00000000 },
];
const expectedPlusOverlapValueEnforced = [
    { offset: 0x00086340, value: 0x00000003 },
    { offset: 0x000884d8, value: 0x00000003 },
    { offset: 0x000d2228, value: 0x00000003 },
];


describe('find-overlap.js', function() {
    it('should find overlaps when value equality is not enforced', function() {
        const overlap = findOverlap(changesToUnapply1, changesToApply1, changesToUnapply2, changesToApply2, false);

        assert.deepEqual(overlap.file1.minusLines, expectedMinusOverlap1, 'Changes to unapply in the first file did not match expectation.');
        assert.deepEqual(overlap.file1.plusLines, expectedPlusOverlap1, 'Changes to apply in the first file did not match expectation.');
        assert.deepEqual(overlap.file2.minusLines, expectedMinusOverlap2, 'Changes to unapply in the second file did not match expectation.');
        assert.deepEqual(overlap.file2.plusLines, expectedPlusOverlap2, 'Changes to apply in the second file did not match expectation.');
    });

    it('should find overlaps when value equality is enforced', function() {
        const overlap = findOverlap(changesToUnapply1, changesToApply1, changesToUnapply2, changesToApply2, true);

        assert.deepEqual(overlap.file1.minusLines, expectedMinusOverlapValueEnforced, '(Equal-value enforced) Changes to unapply did not match expectation.');
        assert.deepEqual(overlap.file1.plusLines, expectedPlusOverlapValueEnforced, '(Equal-value enforced) Changes to apply did not match expectation.');
    });
});